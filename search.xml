<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/11/28/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>博客配置</title>
    <url>/2024/11/28/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h2><p>在博客文件夹中右键打开终端，输入<strong>命令</strong><code>hugo new content post/[博客标题]/index.md</code>，<strong>例子</strong>：<code>hugo new content post/写了下载漫画的油猴脚本/index.md</code>，打开<code>index.md</code>文档，快乐地写作吧</p>
<h2 id="本地博客一键上传到github"><a href="#本地博客一键上传到github" class="headerlink" title="本地博客一键上传到github"></a>本地博客一键上传到github</h2><blockquote>
<p>需要注意的是，需要先在本地<code>hugo配置文件</code>同文件夹处运行<code>hugo server -D</code>，这样博客更改才会同步到<code>public文件夹</code>，上传的才是更新后的文件。</p>
</blockquote>
<p>在public的文件夹里新建一个bat脚本方便一键上传到github</p>
<p>脚本文件内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;update blog&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

<h2 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h2><blockquote>
<p>官方docs：<a href="https://stack.jimmycai.com/config/">https://stack.jimmycai.com/config/</a></p>
</blockquote>
<p>新建的博客<code>index.md</code>包含了博客的内容，该文件标头<code>markdown</code>格式如下，包含了<code>date日期</code>、<code>draft</code>、<code>title标题</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+++</span><br><span class="line">date = &#x27;2024-10-28T22:48:31+08:00&#x27;</span><br><span class="line">draft = true</span><br><span class="line">title = &#x27;测试&#x27;</span><br><span class="line">+++</span><br></pre></td></tr></table></figure>



<h3 id="标签设置"><a href="#标签设置" class="headerlink" title="标签设置"></a>标签设置</h3><p>在<code>index.md</code>博客文件的标头处新增categories &#x3D; ‘测试’，</p>
<p><strong>多标签设置：</strong>categories写成<code>列表</code>，例子：categories &#x3D; [‘标签一’,’标签二’]</p>
<h3 id="B站简码"><a href="#B站简码" class="headerlink" title="B站简码"></a>B站简码</h3><p>&lt; bilibili BV1fhDhYSEGE 1 &gt;</p>
<p>显示效果：</p>
<p><img src="/image-20241129000033957.png" alt="image-20241129000033957"></p>
]]></content>
      <tags>
        <tag>博客配置</tag>
        <tag>hugo</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客-基于hugo模板</title>
    <url>/2024/10/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>昨天花了很长的时间去搜索加去官网找hugo主题配置教程，还是有很多bug</p>
<p>今天在B站刚好搜到一个配置视频，照着专门的主题改，顺利配置好了，第一篇博客诞生！</p>
<h4 id="创建新博客的命令"><a href="#创建新博客的命令" class="headerlink" title="创建新博客的命令"></a>创建新博客的命令</h4><ol>
<li>在博客所有文件存放的文件夹处右键进入<strong>终端</strong></li>
<li>输入命令<code>hugo new content post/&lt;新博客名称&gt;/index.md</code>，显示<code>created</code>即成功</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PS D:\Documents\AAAA代码\myblog&gt; hugo new content post/机器学习测试题/index.md</span><br><span class="line">Content &quot;D:\\Documents\\AAAA代码\\myblog\\content\\post\\机器学习测试题\\index.md&quot; created</span><br></pre></td></tr></table></figure>

<h4 id="文档撰写规范"><a href="#文档撰写规范" class="headerlink" title="文档撰写规范"></a>文档撰写规范</h4><p>必须遵循一定的格式规范，markdown文件才能被渲染为html并顺利展示在网页上</p>
<h5 id="页眉"><a href="#页眉" class="headerlink" title="页眉"></a>页眉</h5><p>在文档的最开始处，应该写为如下样式，其中<code>+++</code>表示分隔行，<code>date</code>、<code>draft</code>、<code>title</code>是默认生成的，<code>description</code>是副标题，<code>categories</code>是文档的分类。目前还只会划分为一类，再多不知道怎么写了，总是报错。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">+++</span><br><span class="line">date = &#x27;2024-11-02T23:08:36+08:00&#x27;</span><br><span class="line">draft = true</span><br><span class="line">title = &#x27;机器学习测试题&#x27;</span><br><span class="line"></span><br><span class="line">description = &#x27;UESTC机器学习研讨题目&#x27;</span><br><span class="line">categories = &#x27;机器学习&#x27;</span><br><span class="line"></span><br><span class="line">+++</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>hugo</tag>
      </tags>
  </entry>
  <entry>
    <title>记录2</title>
    <url>/2024/12/03/%E8%AE%B0%E5%BD%952/</url>
    <content><![CDATA[<h1 id="xampp安装与启动"><a href="#xampp安装与启动" class="headerlink" title="xampp安装与启动"></a>xampp安装与启动</h1><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>下载：<a href="https://www.apachefriends.org/">https://www.apachefriends.org/</a></p>
<p>安装教程：【小白必看的php入门教程，第二节课，软件xampp的安装与使用】<a href="https://www.bilibili.com/video/BV1e7411u7qY?vd_source=8c8fc2009f4a41d7a064a07f284a69af">https://www.bilibili.com/video/BV1e7411u7qY?vd_source=8c8fc2009f4a41d7a064a07f284a69af</a></p>
<h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><ul>
<li>安装路径直接设置为D盘</li>
<li>不要安装在program file下</li>
</ul>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><ol>
<li>启动软件<code>xampp\xampp-control.exe</code></li>
<li>点击对应功能的start启用服务<img src="https://s2.loli.net/2024/12/02/Yo7mbBv6uAiCNVd.png" alt="image-20241202222121100" style="zoom:50%;" /></li>
<li>点explorer进入软件文件夹</li>
<li><code>xampp\htdocs</code>文件夹内写php文件</li>
</ol>
<h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><p>软件使用教程参考<a href="https://blog.csdn.net/qq_36595013/article/details/80373597">https://blog.csdn.net/qq_36595013/article/details/80373597</a></p>
<ul>
<li>开启Mysql连接</li>
<li>点phpmyadmin进入</li>
</ul>
<h2 id="ER图设计"><a href="#ER图设计" class="headerlink" title="ER图设计"></a>ER图设计</h2><p>参考教程：<a href="https://blog.csdn.net/wct040923/article/details/130656641">https://blog.csdn.net/wct040923/article/details/130656641</a></p>
<img src="https://i-blog.csdnimg.cn/blog_migrate/6704a2a13675b6b7a452c045f42d1a65.png" alt="img" style="zoom:50%;" />

<p>具体设计的文件在桌面，是依据聊天记录拍的图片</p>
<img src="https://s2.loli.net/2024/12/03/Cw7copS6ZlQbDMx.jpg" alt="694795f7f3e8b0b9b7d8e3df158752ff" style="zoom:25%;" />

<h2 id="实体关系表设计（MySQL中的SQL表创建）"><a href="#实体关系表设计（MySQL中的SQL表创建）" class="headerlink" title="实体关系表设计（MySQL中的SQL表创建）"></a>实体关系表设计（<strong>MySQL中的SQL表创建</strong>）</h2><ul>
<li>同一个成员在不同乐队中使用的乐器、税率都可能不同，因此写在关系表</li>
</ul>
<p><img src="/image-20241202232557853.png" alt="image-20241202232557853"></p>
<ul>
<li>event存在venue_id和event_date都相同的情况，生成 EventPerformances表时需要注意</li>
</ul>
<p><img src="/image-20241203002327148.png" alt="image-20241203002327148"></p>
<h3 id="列名"><a href="#列名" class="headerlink" title="列名"></a>列名</h3><blockquote>
<p>Musician ID, Musician Name, Birthday, Instrument, Experience, Royalty Rate,<br>Band Name, Genre, Formation Year, Manager Phone, Manager Email,<br>Venue, Event Date, Theme, Audience Size, Merchandise Sales, Ticket Revenue, Headliner</p>
</blockquote>
<h3 id="实体表"><a href="#实体表" class="headerlink" title="实体表"></a>实体表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1. Musicians (音乐家表)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Musicians (</span><br><span class="line">    musician_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    musician_name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    birthday <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    experience <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. Bands (乐队表)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Bands (</span><br><span class="line">    band_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">    band_name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    genre <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    formation_year <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    manager_phone <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    manager_email <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. Venues (场馆表)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Venues (</span><br><span class="line">    venue_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">    venue_name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. Events (活动表)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Events (</span><br><span class="line">    event_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">    venue_id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    event_date <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    theme <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    audience_size <span class="type">INT</span>,</span><br><span class="line">    merchandise_sales <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">    ticket_revenue <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (venue_id) <span class="keyword">REFERENCES</span> Venues(venue_id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="关系表"><a href="#关系表" class="headerlink" title="关系表"></a>关系表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1. BandMembers (乐队成员关系表)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> BandMembers (</span><br><span class="line">    band_id <span class="type">INT</span>,</span><br><span class="line">    musician_id <span class="type">INT</span>,</span><br><span class="line">    instrument <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    royalty_rate <span class="type">DECIMAL</span>(<span class="number">5</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (band_id, musician_id, instrument),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (band_id) <span class="keyword">REFERENCES</span> Bands(band_id),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (musician_id) <span class="keyword">REFERENCES</span> Musicians(musician_id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. EventPerformances (活动演出关系表)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EventPerformances (</span><br><span class="line">    event_id <span class="type">INT</span>,</span><br><span class="line">    band_id <span class="type">INT</span>,</span><br><span class="line">    headliner <span class="type">BOOLEAN</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">FALSE</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (event_id, band_id),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (event_id) <span class="keyword">REFERENCES</span> Events(event_id),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (band_id) <span class="keyword">REFERENCES</span> Bands(band_id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>



<h1 id="数据导入与查询"><a href="#数据导入与查询" class="headerlink" title="数据导入与查询"></a>数据导入与查询</h1><h2 id="导入数据-从CSV文件导入数据"><a href="#导入数据-从CSV文件导入数据" class="headerlink" title="导入数据(从CSV文件导入数据)"></a>导入数据(<strong>从CSV文件导入数据</strong>)</h2><ul>
<li>格式选择：CSV</li>
<li>字符集：选择 utf-8</li>
<li>列分隔符：选择逗号（,）</li>
<li>勾选”第一行为列名”（如果你的CSV第一行是标题）</li>
</ul>
<h2 id="列名解释"><a href="#列名解释" class="headerlink" title="列名解释"></a>列名解释</h2><ol>
<li><p>Musician ID: 音乐家的唯一标识符，用于区分不同的音乐家。</p>
</li>
<li><p>Musician Name: 音乐家的姓名，通常包括名字和姓氏。</p>
</li>
<li><p>Birthday: 音乐家的出生日期，用于计算年龄或经验。</p>
</li>
<li><p>Instrument: 音乐家演奏的乐器，例如萨克斯、鼓、曼陀林等。</p>
</li>
<li><p>Experience: 音乐家的经验水平，可能是“业余”或“专业”。</p>
</li>
<li><p>Royalty Rate: 音乐家在乐队中获得的版税率，表示为小数。</p>
</li>
<li><p>Band Name: 乐队的名称，音乐家所属的乐队。</p>
</li>
<li><p>Genre: 乐队的音乐风格或类型，例如爵士、摇滚等。</p>
</li>
<li><p>Formation Year: 乐队成立的年份。</p>
</li>
<li><p>Manager Phone: 乐队经理的联系电话。</p>
</li>
<li><p>Manager Email: 乐队经理的电子邮件地址。</p>
</li>
<li><p>Venue: 活动举办的场馆名称。</p>
</li>
<li><p>Event Date: 活动的日期。</p>
</li>
<li><p>Theme: 活动的主题，例如“爵士之夜”。</p>
</li>
<li><p>Audience Size: 活动的观众人数。</p>
</li>
<li><p>Merchandise Sales: 活动期间商品销售的总收入。</p>
</li>
<li><p>Ticket Revenue: 活动门票销售的总收入。</p>
</li>
<li><p>Headliner: 指示乐队是否是活动的主乐队，通常为布尔值（True&#x2F;False）。</p>
</li>
</ol>
<h2 id="数据导入到表（数据转移SQL）"><a href="#数据导入到表（数据转移SQL）" class="headerlink" title="数据导入到表（数据转移SQL）"></a>数据导入到表（<strong>数据转移SQL</strong>）</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1. 导入Musicians表</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Musicians (musician_id, musician_name, birthday, experience)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </span><br><span class="line">    `Musician ID`,</span><br><span class="line">    `Musician Name`,</span><br><span class="line">    `Birthday`,</span><br><span class="line">    `Experience`</span><br><span class="line"><span class="keyword">FROM</span> rawdata;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 导入Bands表</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Bands (band_name, genre, formation_year, manager_phone, manager_email)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </span><br><span class="line">    `Band Name`,</span><br><span class="line">    `Genre`,</span><br><span class="line">    `Formation <span class="keyword">Year</span>`,</span><br><span class="line">    `Manager Phone`,</span><br><span class="line">    `Manager Email`</span><br><span class="line"><span class="keyword">FROM</span> rawdata;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 导入Venues表</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Venues (venue_name)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> `Venue`</span><br><span class="line"><span class="keyword">FROM</span> rawdata;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 导入Events表</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Events (venue_id, event_date, theme, audience_size, merchandise_sales, ticket_revenue)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </span><br><span class="line">    v.venue_id,</span><br><span class="line">    r.`Event <span class="type">Date</span>`,</span><br><span class="line">    r.`Theme`,</span><br><span class="line">    r.`Audience Size`,</span><br><span class="line">    r.`Merchandise Sales`,</span><br><span class="line">    r.`Ticket Revenue`</span><br><span class="line"><span class="keyword">FROM</span> rawdata r</span><br><span class="line"><span class="keyword">JOIN</span> Venues v <span class="keyword">ON</span> v.venue_name <span class="operator">=</span> r.`Venue`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 导入BandMembers表</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> BandMembers (band_id, musician_id, instrument, royalty_rate)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> </span><br><span class="line">    b.band_id,</span><br><span class="line">    r.`Musician ID`,</span><br><span class="line">    r.`Instrument`,</span><br><span class="line">    r.`Royalty Rate`</span><br><span class="line"><span class="keyword">FROM</span> rawdata r</span><br><span class="line"><span class="keyword">JOIN</span> Bands b <span class="keyword">ON</span> b.band_name <span class="operator">=</span> r.`Band Name`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6. 导入EventPerformances表</span></span><br><span class="line"><span class="comment">-- 使用GROUP BY确保每个活动-乐队组合只插入一次</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EventPerformances (event_id, band_id, is_headliner)</span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    e.event_id,</span><br><span class="line">    b.band_id,</span><br><span class="line">    <span class="built_in">MAX</span>(r.`Headliner`) <span class="keyword">as</span> is_headliner  <span class="comment">-- 使用MAX获取一个值</span></span><br><span class="line"><span class="keyword">FROM</span> rawdata r</span><br><span class="line"><span class="keyword">JOIN</span> Venues v <span class="keyword">ON</span> v.venue_name <span class="operator">=</span> r.`Venue`</span><br><span class="line"><span class="keyword">JOIN</span> Events e <span class="keyword">ON</span> e.event_date <span class="operator">=</span> r.`Event <span class="type">Date</span>` </span><br><span class="line">    <span class="keyword">AND</span> e.venue_id <span class="operator">=</span> v.venue_id</span><br><span class="line">    <span class="keyword">AND</span> e.theme <span class="operator">=</span> r.`Theme`</span><br><span class="line"><span class="keyword">JOIN</span> Bands b <span class="keyword">ON</span> b.band_name <span class="operator">=</span> r.`Band Name`</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> e.event_id, b.band_id;  <span class="comment">-- 对活动和乐队进行分组</span></span><br></pre></td></tr></table></figure>

<h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><p>导入EventPerformances表需要注意，利用了group by分组去除了结果中（只有event_id、band_id、headline）的重复的组合（也就是每个乐队的每个人的数据都占了一行，一个乐队有4个人就是重复了4次），不然会报错</p>
<h2 id="查询语句（SQL查询和结果）"><a href="#查询语句（SQL查询和结果）" class="headerlink" title="查询语句（SQL查询和结果）"></a>查询语句（<strong>SQL查询和结果</strong>）</h2><p> a. 列出每位在1997年1月1日至2012年12月31日期间出生的音乐家的姓名和出生日期。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> musician_name, birthday</span><br><span class="line"><span class="keyword">FROM</span> Musicians</span><br><span class="line"><span class="keyword">WHERE</span> birthday <span class="keyword">BETWEEN</span> <span class="string">&#x27;1997-01-01&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2012-12-31&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p> b. 列出每个乐队的总演出次数。包括乐队名称。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    b.band_name,</span><br><span class="line">    <span class="built_in">COUNT</span>(ep.event_id) <span class="keyword">as</span> performance_count</span><br><span class="line"><span class="keyword">FROM</span> Bands b</span><br><span class="line"><span class="comment">-- join：连接</span></span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> EventPerformances ep <span class="keyword">ON</span> b.band_id <span class="operator">=</span> ep.band_id</span><br><span class="line"><span class="comment">-- 分组，去除重复的数据</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> b.band_id, b.band_name</span><br><span class="line"><span class="comment">-- order by对查找的数据排序</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> performance_count <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>



<p> c. 列出每个乐队的门票销售总收入和商品销售总收入。包括乐队名称、风格和成立年份。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    b.band_name,</span><br><span class="line">    b.genre,</span><br><span class="line">    b.formation_year,</span><br><span class="line">    <span class="built_in">SUM</span>(<span class="keyword">CASE</span> </span><br><span class="line">        <span class="keyword">WHEN</span> ep.headliner <span class="operator">=</span> <span class="literal">TRUE</span> <span class="keyword">THEN</span> e.ticket_revenue <span class="operator">*</span> <span class="number">0.8</span> <span class="operator">*</span> <span class="number">0.6</span></span><br><span class="line">        <span class="keyword">ELSE</span> (e.ticket_revenue <span class="operator">*</span> <span class="number">0.8</span> <span class="operator">*</span> <span class="number">0.4</span>) <span class="operator">/</span> </span><br><span class="line">            (<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> EventPerformances ep2 </span><br><span class="line">             <span class="keyword">WHERE</span> ep2.event_id <span class="operator">=</span> e.event_id <span class="keyword">AND</span> ep2.headliner <span class="operator">=</span> <span class="literal">FALSE</span>)</span><br><span class="line">    <span class="keyword">END</span>) <span class="keyword">as</span> total_ticket_revenue,</span><br><span class="line">    <span class="built_in">SUM</span>(<span class="keyword">CASE</span> </span><br><span class="line">        <span class="keyword">WHEN</span> ep.headliner <span class="operator">=</span> <span class="literal">TRUE</span> <span class="keyword">THEN</span> e.merchandise_sales <span class="operator">*</span> <span class="number">0.6</span></span><br><span class="line">        <span class="keyword">ELSE</span> (e.merchandise_sales <span class="operator">*</span> <span class="number">0.4</span>) <span class="operator">/</span> </span><br><span class="line">            (<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> EventPerformances ep2 </span><br><span class="line">             <span class="keyword">WHERE</span> ep2.event_id <span class="operator">=</span> e.event_id <span class="keyword">AND</span> ep2.headliner <span class="operator">=</span> <span class="literal">FALSE</span>)</span><br><span class="line">    <span class="keyword">END</span>) <span class="keyword">as</span> total_merchandise_revenue</span><br><span class="line"><span class="keyword">FROM</span> Bands b</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> EventPerformances ep <span class="keyword">ON</span> b.band_id <span class="operator">=</span> ep.band_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> Events e <span class="keyword">ON</span> ep.event_id <span class="operator">=</span> e.event_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> b.band_id, b.band_name, b.genre, b.formation_year</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> total_ticket_revenue <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>



<p> d. 列出所有在2023年3月期间，除了“The Waves”或“Groove Squad”之外的所有乐队都演出的场馆名称。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> v.venue_name</span><br><span class="line"><span class="keyword">FROM</span> Venues v</span><br><span class="line"><span class="keyword">JOIN</span> Events e <span class="keyword">ON</span> v.venue_id <span class="operator">=</span> e.venue_id</span><br><span class="line"><span class="keyword">JOIN</span> EventPerformances ep <span class="keyword">ON</span> e.event_id <span class="operator">=</span> ep.event_id</span><br><span class="line"><span class="keyword">JOIN</span> Bands b <span class="keyword">ON</span> ep.band_id <span class="operator">=</span> b.band_id</span><br><span class="line"><span class="keyword">WHERE</span> e.event_date <span class="keyword">BETWEEN</span> <span class="string">&#x27;2023-03-01&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2023-03-31&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> v.venue_name</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> b.band_name) <span class="operator">=</span> </span><br><span class="line">    (<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> b2.band_name)</span><br><span class="line">     <span class="keyword">FROM</span> Bands b2</span><br><span class="line">     <span class="keyword">JOIN</span> EventPerformances ep2 <span class="keyword">ON</span> b2.band_id <span class="operator">=</span> ep2.band_id</span><br><span class="line">     <span class="keyword">JOIN</span> Events e2 <span class="keyword">ON</span> ep2.event_id <span class="operator">=</span> e2.event_id</span><br><span class="line">     <span class="keyword">WHERE</span> e2.venue_id <span class="operator">=</span> v.venue_id</span><br><span class="line">     <span class="keyword">AND</span> e2.event_date <span class="keyword">BETWEEN</span> <span class="string">&#x27;2023-03-01&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2023-03-31&#x27;</span></span><br><span class="line">     <span class="keyword">AND</span> b2.band_name <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="string">&#x27;The Waves&#x27;</span>, <span class="string">&#x27;Groove Squad&#x27;</span>));</span><br><span class="line"></span><br><span class="line"># 使用<span class="keyword">HAVING</span>子句确保场馆中演出的乐队不包括“The Waves”和“Groove Squad”。</span><br></pre></td></tr></table></figure>



<p> e. 编写一个查询，为每个场馆列出年末总结，显示场馆名称、举办的活动数量、总门票收入、总商品销售额和每个活动的平均观众规模。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    v.venue_name,</span><br><span class="line">    <span class="built_in">COUNT</span>(e.event_id) <span class="keyword">as</span> total_events,</span><br><span class="line">    <span class="built_in">SUM</span>(e.ticket_revenue) <span class="keyword">as</span> total_ticket_revenue,</span><br><span class="line">    <span class="built_in">SUM</span>(e.merchandise_sales) <span class="keyword">as</span> total_merchandise_sales,</span><br><span class="line">    ROUND(<span class="built_in">AVG</span>(e.audience_size), <span class="number">0</span>) <span class="keyword">as</span> avg_audience_size</span><br><span class="line"><span class="keyword">FROM</span> Venues v</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> Events e <span class="keyword">ON</span> v.venue_id <span class="operator">=</span> e.venue_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> v.venue_id, v.venue_name</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> total_events <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"># ROUND(..., <span class="number">0</span>): 将平均观众数四舍五入到整数</span><br></pre></td></tr></table></figure>



<p> f. 列出那些是在他们出生日期之前成立的乐队的音乐家。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span></span><br><span class="line">    m.musician_name,</span><br><span class="line">    m.birthday,</span><br><span class="line">    b.band_name,</span><br><span class="line">    b.formation_year</span><br><span class="line"><span class="keyword">FROM</span> Musicians m</span><br><span class="line"><span class="keyword">JOIN</span> BandMembers bm <span class="keyword">ON</span> m.musician_id <span class="operator">=</span> bm.musician_id</span><br><span class="line"><span class="keyword">JOIN</span> Bands b <span class="keyword">ON</span> bm.band_id <span class="operator">=</span> b.band_id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(m.birthday) <span class="operator">&gt;</span> b.formation_year</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> m.musician_name;</span><br></pre></td></tr></table></figure>



<p> g. 选择一个特定的地点（场馆），列出所有在任何爵士主题活动（与爵士音乐相关的活动）中演出的乐队。如果一个乐队演出了多次，只包括第一次演出的日期。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    b.band_name,</span><br><span class="line">    <span class="built_in">MIN</span>(e.event_date) <span class="keyword">as</span> first_performance_date</span><br><span class="line"><span class="keyword">FROM</span> Venues v</span><br><span class="line"><span class="keyword">JOIN</span> Events e <span class="keyword">ON</span> v.venue_id <span class="operator">=</span> e.venue_id</span><br><span class="line"><span class="keyword">JOIN</span> EventPerformances ep <span class="keyword">ON</span> e.event_id <span class="operator">=</span> ep.event_id</span><br><span class="line"><span class="keyword">JOIN</span> Bands b <span class="keyword">ON</span> ep.band_id <span class="operator">=</span> b.band_id</span><br><span class="line"><span class="keyword">WHERE</span> v.venue_name <span class="operator">=</span> <span class="string">&#x27;The Pavilion&#x27;</span>  <span class="comment">-- 这里可以更换成你想查询的场馆名称</span></span><br><span class="line"><span class="keyword">AND</span> e.theme <span class="keyword">LIKE</span> <span class="string">&#x27;%Jazz%&#x27;</span>  <span class="comment">-- 匹配包含&#x27;Jazz&#x27;的主题</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> b.band_id, b.band_name</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> first_performance_date;</span><br></pre></td></tr></table></figure>



<p> h. 找出观众规模最大的活动（如果有多个活动）。列出场馆、日期和演出的乐队。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    v.venue_name,</span><br><span class="line">    e.event_date,</span><br><span class="line">    e.audience_size,</span><br><span class="line">    b.band_name,</span><br><span class="line">    <span class="keyword">CASE</span> </span><br><span class="line">        <span class="keyword">WHEN</span> ep.headliner <span class="operator">=</span> <span class="literal">TRUE</span> <span class="keyword">THEN</span> <span class="string">&#x27;Headliner&#x27;</span></span><br><span class="line">        <span class="keyword">ELSE</span> <span class="string">&#x27;Support&#x27;</span></span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">as</span> band_role</span><br><span class="line"><span class="keyword">FROM</span> Events e</span><br><span class="line"><span class="keyword">JOIN</span> Venues v <span class="keyword">ON</span> e.venue_id <span class="operator">=</span> v.venue_id</span><br><span class="line"><span class="keyword">JOIN</span> EventPerformances ep <span class="keyword">ON</span> e.event_id <span class="operator">=</span> ep.event_id</span><br><span class="line"><span class="keyword">JOIN</span> Bands b <span class="keyword">ON</span> ep.band_id <span class="operator">=</span> b.band_id</span><br><span class="line"><span class="keyword">WHERE</span> e.audience_size <span class="operator">=</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(audience_size) </span><br><span class="line">    <span class="keyword">FROM</span> Events</span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">    e.event_date;</span><br></pre></td></tr></table></figure>



<p> i. 找出在2023年3月期间版税收入最高的音乐家（如果有多位音乐家）。包括他们的姓名、他们演奏的所有乐器和总版税收入。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 先创建了一个新表</span><br><span class="line"><span class="keyword">WITH</span> MusicianRevenue <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> </span><br><span class="line">        m.musician_id,</span><br><span class="line">        m.musician_name,</span><br><span class="line">        GROUP_CONCAT(<span class="keyword">DISTINCT</span> bm.instrument) <span class="keyword">as</span> instruments, # 合并所有的乐器</span><br><span class="line">        <span class="built_in">SUM</span>(</span><br><span class="line">            <span class="keyword">CASE</span> </span><br><span class="line">                <span class="keyword">WHEN</span> ep.headliner <span class="operator">=</span> <span class="literal">TRUE</span> <span class="keyword">THEN</span> </span><br><span class="line">                    e.ticket_revenue <span class="operator">*</span> <span class="number">0.8</span> <span class="operator">*</span> <span class="number">0.6</span> <span class="operator">*</span> bm.royalty_rate</span><br><span class="line">                <span class="keyword">ELSE</span> </span><br><span class="line">                    (e.ticket_revenue <span class="operator">*</span> <span class="number">0.8</span> <span class="operator">*</span> <span class="number">0.4</span> <span class="operator">/</span> </span><br><span class="line">                        (<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> EventPerformances ep2 </span><br><span class="line">                         <span class="keyword">WHERE</span> ep2.event_id <span class="operator">=</span> e.event_id <span class="keyword">AND</span> ep2.headliner <span class="operator">=</span> <span class="literal">FALSE</span>)</span><br><span class="line">                    ) <span class="operator">*</span> bm.royalty_rate</span><br><span class="line">            <span class="keyword">END</span></span><br><span class="line">        ) <span class="keyword">as</span> total_royalty</span><br><span class="line">    <span class="keyword">FROM</span> Musicians m</span><br><span class="line">    <span class="keyword">JOIN</span> BandMembers bm <span class="keyword">ON</span> m.musician_id <span class="operator">=</span> bm.musician_id</span><br><span class="line">    <span class="keyword">JOIN</span> EventPerformances ep <span class="keyword">ON</span> bm.band_id <span class="operator">=</span> ep.band_id</span><br><span class="line">    <span class="keyword">JOIN</span> Events e <span class="keyword">ON</span> ep.event_id <span class="operator">=</span> e.event_id</span><br><span class="line">    <span class="keyword">WHERE</span> e.event_date <span class="keyword">BETWEEN</span> <span class="string">&#x27;2023-03-01&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2023-03-31&#x27;</span></span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> m.musician_id, m.musician_name</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    musician_name,</span><br><span class="line">    instruments,</span><br><span class="line">    total_royalty</span><br><span class="line"><span class="keyword">FROM</span> MusicianRevenue</span><br><span class="line"><span class="keyword">WHERE</span> total_royalty <span class="operator">=</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(total_royalty) </span><br><span class="line">    <span class="keyword">FROM</span> MusicianRevenue</span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> musician_name;</span><br></pre></td></tr></table></figure>



<p> j. 识别任何在乐队中也是独奏艺术家的音乐家。此外，确定这些独奏艺术家在演出时是否演奏了多种乐器，并列出他们与乐队一起演出的日期。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 先找出独奏艺术家（假设独奏艺术家就是自己组成的乐队）</span></span><br><span class="line"><span class="keyword">WITH</span> SoloArtists <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> m.musician_id, m.musician_name</span><br><span class="line">    <span class="keyword">FROM</span> Musicians m</span><br><span class="line">    <span class="keyword">JOIN</span> BandMembers bm <span class="keyword">ON</span> m.musician_id <span class="operator">=</span> bm.musician_id</span><br><span class="line">    <span class="keyword">JOIN</span> Bands b <span class="keyword">ON</span> bm.band_id <span class="operator">=</span> b.band_id</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> b.band_id, m.musician_id, m.musician_name</span><br><span class="line">    <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(bm.musician_id) <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">),</span><br><span class="line"><span class="comment">-- 找出多人乐队的成员</span></span><br><span class="line">BandArtists <span class="keyword">AS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> m.musician_id, m.musician_name</span><br><span class="line">    <span class="keyword">FROM</span> Musicians m</span><br><span class="line">    <span class="keyword">JOIN</span> BandMembers bm <span class="keyword">ON</span> m.musician_id <span class="operator">=</span> bm.musician_id</span><br><span class="line">    <span class="keyword">JOIN</span> Bands b <span class="keyword">ON</span> bm.band_id <span class="operator">=</span> b.band_id</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> b.band_id, m.musician_id, m.musician_name</span><br><span class="line">    <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(bm.musician_id) <span class="operator">&gt;</span> <span class="number">1</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">-- 主查询</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    m.musician_name,</span><br><span class="line">    e.event_date,</span><br><span class="line">    b.band_name</span><br><span class="line"><span class="keyword">FROM</span> Musicians m</span><br><span class="line"><span class="keyword">JOIN</span> BandMembers bm <span class="keyword">ON</span> m.musician_id <span class="operator">=</span> bm.musician_id</span><br><span class="line"><span class="keyword">JOIN</span> Bands b <span class="keyword">ON</span> bm.band_id <span class="operator">=</span> b.band_id</span><br><span class="line"><span class="keyword">JOIN</span> EventPerformances ep <span class="keyword">ON</span> b.band_id <span class="operator">=</span> ep.band_id</span><br><span class="line"><span class="keyword">JOIN</span> Events e <span class="keyword">ON</span> ep.event_id <span class="operator">=</span> e.event_id</span><br><span class="line"><span class="keyword">WHERE</span> m.musician_id <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> s.musician_id </span><br><span class="line">    <span class="keyword">FROM</span> SoloArtists s</span><br><span class="line">    <span class="keyword">JOIN</span> BandArtists ba <span class="keyword">ON</span> s.musician_id <span class="operator">=</span> ba.musician_id</span><br><span class="line">)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> m.musician_name, e.event_date, b.band_name</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> m.musician_name, e.event_date;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>数据库</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
</search>
